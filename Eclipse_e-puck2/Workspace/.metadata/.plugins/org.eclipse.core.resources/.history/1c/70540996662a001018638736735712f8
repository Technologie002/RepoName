#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#include "ch.h"
#include "hal.h"
#include "memory_protection.h"
#include <main.h>
#include "leds.h"//灯光秀头文件
#include "spi_comm.h"
#include "motors.h"
#include "sensors/VL53L0X/VL53L0X.h"
#include "sensors/proximity.h"
messagebus_t bus;
MUTEX_DECL(bus_lock);
CONDVAR_DECL(bus_condvar);
int main(void)
{

    halInit();
    chSysInit();
    mpu_init();
    messagebus_init(&bus, &bus_lock, &bus_condvar);
    motors_init();

    clear_leds();//灯光秀前提条件
    spi_comm_start();

    //VL53L0X_start();
    proximity_start(0);
    calibrate_ir();
    /* Infinite loop. */
    while (1) {

    	int n=get_ambient_light(5);
    	set_rgb_led(LED2, 0, 1,0);
    	//set_rgb_led(LED4, n%10, 1,0);
    	if (n>50)
			chThdSleepMilliseconds(n);
    	else
    		chThdSleepMilliseconds(50);
    	set_rgb_led(LED2, 1, 0,0);
    	/*left_motor_set_speed(0);
    	right_motor_set_speed(0);
    	set_body_led(2);

    	int n=get_selector();
    	while(n--){
    		set_body_led(1);
    		chThdSleepMilliseconds(1000);
    		chThdSleepMilliseconds(1000);
    		chThdSleepMilliseconds(1000);
    		set_body_led(0);
    	}

    	left_motor_set_speed(-left_motor_get_desired_speed());
		right_motor_set_speed(-right_motor_get_desired_speed());*/

    	//chThdSleepMilliseconds(500);



    	//waits 1 second
    	/*set_body_led(1); //灯光环绕
    	chThdSleepMilliseconds(2000);

        set_body_led(0);
        set_led(LED1, 1);
        chThdSleepMilliseconds(2000);
        set_led(LED1, 0);
        set_led(LED3, 1);
        chThdSleepMilliseconds(2000);
        set_led(LED3, 0);
        set_led(LED5, 1);
        chThdSleepMilliseconds(2000);
        set_led(LED5, 0);
        set_led(LED7, 1);
        chThdSleepMilliseconds(2000);
        set_led(LED7, 0);*/


    }
}

#define STACK_CHK_GUARD 0xe2dee396
uintptr_t __stack_chk_guard = STACK_CHK_GUARD;

void __stack_chk_fail(void)
{
    chSysHalt("Stack smashing detected");
}
